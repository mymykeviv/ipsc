version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: profitpath-postgres-local
    environment:
      POSTGRES_DB: profitpath
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d profitpath"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - profitpath_network

  # Backend API (Local Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: profitpath-backend:local
    container_name: profitpath-backend-local
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+psycopg://postgres:postgres@postgres:5432/profitpath
      - SECRET_KEY=local-dev-secret-key-change-in-production
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - APP_NAME=ProfitPath Backend
      - VERSION=1.4.4
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - profitpath_network
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000 --log-level debug
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Local Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: profitpath-frontend:local
    container_name: profitpath-frontend-local
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_DEBUG=true
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - backend
    networks:
      - profitpath_network
    command: npm run dev -- --host --port 5173

  # Email Testing (Optional)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: profitpath-mailhog-local
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - profitpath_network

volumes:
  postgres_data:
    driver: local

networks:
  profitpath_network:
    name: profitpath_network
    driver: bridge
