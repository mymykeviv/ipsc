# Multi-stage build for optimized frontend
# Stage 1: Dependencies
FROM node:22-bookworm-slim AS deps

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Avoid optional native deps to keep image portable
ENV npm_config_optional=false
# Install dependencies with optimization
RUN npm ci --only=production --no-audit --no-fund --no-optional

# Stage 2: Production build
FROM node:22-bookworm-slim AS prod-build

WORKDIR /app

# Copy package files and install all dependencies
COPY package*.json ./
# Remove lockfile to avoid npm optional dependency bug across architectures
# Allow optional deps so Rollup's native package is available when required
RUN rm -f package-lock.json && npm install --no-audit --no-fund \
    && arch=$(uname -m) \
    && echo "Detected architecture: $arch" \
    && if [ "$arch" = "aarch64" ] || [ "$arch" = "arm64" ]; then \
         echo "Installing ARM64 rollup bindings" && \
         npm install --no-audit --no-fund @rollup/rollup-linux-arm64-gnu; \
       elif [ "$arch" = "x86_64" ] || [ "$arch" = "amd64" ]; then \
         echo "Installing x64 rollup bindings" && \
         npm install --no-audit --no-fund @rollup/rollup-linux-x64-gnu; \
       else \
         echo "Unknown arch $arch; proceeding without explicit rollup native install"; \
       fi

# Copy source code
COPY . .

# Build for production (skip Rollup native bindings)
ENV ROLLUP_SKIP_NODEJS_NATIVE=true
RUN ROLLUP_SKIP_NODEJS_NATIVE=true npm run build

# Stage 3: Production runtime with nginx
FROM nginx:alpine AS production

# Install runtime dependencies
RUN apk add --no-cache curl

# Copy built files from prod-build stage
COPY --from=prod-build /app/dist /usr/share/nginx/html

# Copy optimized nginx configuration
COPY nginx.optimized.conf /etc/nginx/nginx.conf

# Use default nginx user provided by the image

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80 || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
