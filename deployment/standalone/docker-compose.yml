version: '3.8'

services:
  # Database Service
  database:
    image: postgres:16-alpine
    container_name: profitpath-database
    environment:
      POSTGRES_USER: profitpath
      POSTGRES_PASSWORD: profitpath123
      POSTGRES_DB: profitpath
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U profitpath"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - profitpath-network

  # Backend API Service
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
      target: production
    container_name: profitpath-backend
    environment:
      ENVIRONMENT: production
      DATABASE_URL: postgresql+psycopg://profitpath:profitpath123@database:5432/profitpath
      SECRET_KEY: your-secret-key-change-this-in-production
      DEBUG: "false"
      LOG_LEVEL: INFO
      CORS_ORIGINS: "*"
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USERNAME: ""
      SMTP_PASSWORD: ""
      SMTP_USE_TLS: "false"
    depends_on:
      database:
        condition: service_healthy
    expose:
      - "8000"
    volumes:
      - backend_logs:/app/logs
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 2"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - profitpath-network

  # Frontend Web Application
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
      target: development
    container_name: profitpath-frontend
    expose:
      - "5173"
    environment:
      VITE_API_URL: http://backend:8000
      VITE_APP_ENV: development
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - profitpath-network

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: profitpath-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - profitpath-network

  # Email Testing Service
  mailhog:
    image: mailhog/mailhog:latest
    platform: linux/amd64
    container_name: profitpath-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - profitpath-network

volumes:
  database_data:
  backend_logs:

networks:
  profitpath-network:
    driver: bridge
